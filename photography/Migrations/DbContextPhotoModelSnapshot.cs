// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using photography.Models;

namespace photography.Migrations
{
    [DbContext(typeof(DbContextPhoto))]
    partial class DbContextPhotoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("photography.Models.Category", b =>
                {
                    b.Property<int>("CategoeryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CategoryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NameCategory")
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("CategoeryId");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("photography.Models.PhotosAlbum", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AlbumTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoeryId");

                    b.Property<string>("ImageNamE")
                        .HasColumnType("varchar(140)");

                    b.Property<string>("ImageNameF")
                        .HasColumnType("varchar(140)");

                    b.Property<string>("ImageNameFi")
                        .HasColumnType("varchar(140)");

                    b.Property<string>("ImageNameN")
                        .HasColumnType("varchar(140)");

                    b.Property<string>("ImageNameO")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImageNameS")
                        .HasColumnType("varchar(140)");

                    b.Property<string>("ImageNameSe")
                        .HasColumnType("varchar(140)");

                    b.Property<string>("ImageNameT")
                        .HasColumnType("varchar(140)");

                    b.Property<string>("ImageNameTe")
                        .HasColumnType("varchar(140)");

                    b.Property<string>("ImageNameTh")
                        .HasColumnType("varchar(140)");

                    b.HasKey("PhotoId");

                    b.ToTable("photosAlbum");
                });

            modelBuilder.Entity("photography.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("ImgPath");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("user");
                });
#pragma warning restore 612, 618
        }
    }
}
